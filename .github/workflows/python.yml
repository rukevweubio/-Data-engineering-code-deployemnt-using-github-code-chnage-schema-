name: CI/CD Pipeline for Snowflake Deployment

on:
  workflow_dispatch: # This allows manual triggering of the workflow
    inputs:
      deploy_files:
        description: 'Files to deploy (comma-separated list)'
        required: true
        default: 'deploy/*create_schema.sql'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

    # Step 1: Checkout the GitHub repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Install SnowSQL
    - name: Install SnowSQL
      run: |
        curl -O https://s3.amazonaws.com/snowflake-client-releases/snowflake-snowsql-1.2.17-linux-x86_64.tar.gz
        tar -xvzf snowflake-snowsql-1.2.17-linux-x86_64.tar.gz
        sudo mv snowsql /usr/local/bin/

    # Step 3: Set up Snowflake credentials using GitHub Secrets
    - name: Set up Snowflake credentials
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      run: |
        # Write Snowflake credentials to a configuration file
        mkdir -p ~/.snowsql
        echo "[connections]" > ~/.snowsql/config
        echo "accountname = $SNOWFLAKE_ACCOUNT" >> ~/.snowsql/config
        echo "username = $SNOWFLAKE_USER" >> ~/.snowsql/config
        echo "password = $SNOWFLAKE_PASSWORD" >> ~/.snowsql/config
        echo "database = $SNOWFLAKE_DATABASE" >> ~/.snowsql/config
        echo "schema = $SNOWFLAKE_SCHEMA" >> ~/.snowsql/config
        echo "warehouse = $SNOWFLAKE_WAREHOUSE" >> ~/.snowsql/config
        echo "role = $SNOWFLAKE_ROLE" >> ~/.snowsql/config

    # Step 4: Run Snowflake SQL scripts using SnowSQL
    - name: Run Snowflake SQL scripts with SnowSQL
      run: |
        # Get deploy files from input and execute each SQL file
        deploy_files='${{ github.event.inputs.deploy_files }}'
        for file_pattern in $deploy_files; do
          for file in ./deploy/*; do
            if [[ $file == $file_pattern ]]; then
              echo "Executing $file"
              snowsql -f $file
            fi
          done
        done

    # Step 5: Notify deployment status
    - name: Notify deployment status
      if: success()
      run: echo "Snowflake deployment successful!"
